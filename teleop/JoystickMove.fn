/*
 * JoystickMove.fn ~ bool joystickMove(int sticknum, int min, int max, int scale)
 * Alex Jones for team 5105 Buffalo Wings
 *
 * Description: 	modifies the values found by a joystick into a vector movement of the robot
 *
 * Takes:			- int sticknum ~ the number identifier for what stick to read from
 *						- int min ~ the minimum value accepted by the joystick
 * 						- int max ~ the highest value possible for the motor
 * 						- int scale ~ as defined in etc/Scales.var
 *
 * Returns:			- (bool) true for success, false for failure
 *
 * Uses: 			for use driving the robot and making the interface easily usable
 *
 * Dependancies:	IDK, many things
 *
 * ~licensed under the GNU GPLv3 license included in this repositiory
*/

bool joystickMove(int sticknum, int min, int max, int scale)
{
	float xval = getJoystick(1, sticknum, 'x')/1.28;
	float yval = getJoystick(1, sticknum, 'y')/1.28;

	//if(xval < min && xval > -min && yval < min && yval > -min) return false;

	float rval = yval - xval;
	float lval = yval + xval;

	if(rval > 0) rval = clamp(rval, min, 100);
	else rval = clamp(rval, -min, -100);
	if(lval > 0) lval = clamp(rval, min, 100);
	else lval = clamp(lval, -min, -100);
	
	rval = scaleJoystick(rval, scale);
	lval = scaleJoystick(lval, scale);
	
	rval *= max/100;
	lval *= max/100;
	
	return twoMotors(lval,rval);
}
